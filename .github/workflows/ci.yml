name: Deploy github pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: purcell/setup-emacs@master
        with:
          version: 28.1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # for npm
      - name: setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: cache ./node_modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: npm install
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install
      - name: Run secretlint
        run: npx secretlint "./*.org"

      # for build html
      - name: wget htmlize
        run: wget https://raw.githubusercontent.com/hniksic/emacs-htmlize/master/htmlize.el
      - name: mkdir public
        run: mkdir -p ./public
      - name: build index
        run: |
          emacs index.org -Q --batch --eval "(progn (load \"$PWD/htmlize.el\") (setq org-html-htmlize-output-type 'css) (org-html-export-to-html))"
          mv index.html ./public/index.html
      - name: build yasnippets
        run: |
          emacs yasnippets.org -Q --batch --eval "(progn (load \"$PWD/htmlize.el\") (setq org-html-htmlize-output-type 'css) (org-html-export-to-html))"
          mv yasnippets.html ./public/yasnippets.html
      - name: build early-init
        run: |
          emacs early-init.org -Q --batch --eval "(progn (load \"$PWD/htmlize.el\") (setq org-html-htmlize-output-type 'css) (org-html-export-to-html))"
          mv early-init.html ./public/early-init.html
      - name: build elfeed
        run: |
          emacs elfeed.org -Q --batch --eval "(progn (load \"$PWD/htmlize.el\") (setq org-html-htmlize-output-type 'css) (org-html-export-to-html))"
          mv elfeed.html ./public/elfeed.html

      # for github pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
